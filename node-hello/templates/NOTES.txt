{{- if .Values.ingress }}
  {{- if .Values.ingress.enabled }}
    {{- if .Values.ingress.hosts }}
      {{- range $host := .Values.ingress.hosts }}
        {{- range .paths }}
        The application is accessible via the following URL(s):
        http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
        {{- end }}
      {{- end }}
    {{- else }}
      The application is accessible via the Ingress controller.
    {{- end }}
  {{- else if eq .Values.service.type "NodePort" }}
    {{- with $service := include "node-hello.fullname" . }}
      export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{$service}})
      export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
      echo "The application is accessible at: http://$NODE_IP:$NODE_PORT"
    {{- end }}
  {{- else if eq .Values.service.type "LoadBalancer" }}
    {{- with $service := include "node-hello.fullname" . }}
      NOTE: It may take a few minutes for the LoadBalancer IP to be available.
            You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{$service}}'
      export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{$service}} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
      echo "The application is accessible at: http://$SERVICE_IP:{{ .Values.service.port }}"
    {{- end }}
  {{- else if eq .Values.service.type "ClusterIP" }}
    {{- with $service := include "node-hello.fullname" . }}
      export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "node-hello.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
      export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
      echo "Visit http://127.0.0.1:8080 to use your application"
      kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
    {{- end }}
  {{- end }}
{{- end }}